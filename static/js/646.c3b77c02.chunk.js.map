{"version":3,"file":"static/js/646.c3b77c02.chunk.js","mappings":"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","sources":["components/Balance/Balance.jsx","components/Balance/Balance.styled.js","components/WalletButton/WalletButton.styled.js","components/WalletButton/WalletButton.jsx","components/HomeTab/HomeTab.styled.js","components/HomeTab/HomeTab.jsx","components/AddTrnsctnBtn/AddTrnsctnBtn.styled.js","assets/images/plus.svg","components/AddTrnsctnBtn/AddTrnsctnBtn.jsx","components/AddTransactionModal/AddTransactionModal.styled.js","components/AddTransactionModal/AddTransactionForm/AddTransactionForm.styled.js","components/AddTransactionModal/AddTransactionForm/AddTransactionForm.jsx","components/AddTransactionModal/AddTransactionModal.jsx","components/HomePage/HomePage.jsx","pages/Home/Home.js"],"sourcesContent":["import { BalanceTitle, BalanceSumm } from './Balance.styled';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\n\nimport { theme } from 'Styles/theme';\n\nexport const Balance = () => {\n  const { selectBalance } = authSelectors;\n  const balance = useSelector(selectBalance)\n    .toLocaleString('fr-FR', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n    .replace(',', '.');\n\n  return (\n    <>\n      <BalanceTitle theme={theme}> Your balance</BalanceTitle>\n      <BalanceSumm>₴ {balance}</BalanceSumm>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const BalanceBlockMob = styled.div(({ theme }) => ({\n  margin: '0 auto',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '11px',\n  justifyContent: 'center',\n  width: '280px',\n  fontSize: '30px',\n  textTransform: 'uppercase',\n  backgroundColor: theme.colors.textSecondary,\n  color: theme.colors.textMain,\n  padding: '11px 32px',\n  borderRadius: theme.radii.currency,\n}));\n\nexport const BalanceBlockTablet = styled.div(({ theme }) => ({\n  marginLeft: '32px',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '11px',\n  justifyContent: 'center',\n  width: '336px',\n  textTransform: 'uppercase',\n  backgroundColor: theme.colors.textSecondary,\n  color: theme.colors.textMain,\n  padding: '8px 32px 11px 40px',\n  borderRadius: theme.radii.currency,\n}));\n\nexport const BalanceSumm = styled.p(({ theme }) => ({\n  padding: 0,\n  fontFamily: theme.fonts.main,\n  fontSize: '30px',\n  lineHeight: '36px',\n  textTransform: 'uppercase',\n  color: theme.colors.textMain,\n  fontWeight: 700,\n}));\n\nexport const BalanceBlockDesk = styled.div(({ theme }) => ({\n  marginLeft: '16px',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '12px',\n  justifyContent: 'center',\n  width: '395px',\n  textTransform: 'uppercase',\n  backgroundColor: theme.colors.textSecondary,\n  color: theme.colors.textMain,\n  padding: '8px 40px 11px 40px',\n  borderRadius: theme.radii.currency,\n}));\n\nexport const BalanceTitle = styled.p(({ theme }) => ({\n  padding: 0,\n  fontFamily: theme.fonts.secondary,\n  fontSize: '12px',\n  lineHeight: '13px',\n  fontWeight: '400',\n  textTransform: 'uppercase',\n  color: '#A6A6A6',\n}));\n","import styled from '@emotion/styled';\n\nexport const WalletBtn = styled.button(({ theme, styleType }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  minWidth: '300px',\n  minHeight: '50px',\n  fontFamily: theme.fonts.mainForms,\n  fontSize: theme.fontSizes.lg,\n  textTransform: 'uppercase',\n  letterSpacing: '0.1em',\n\n  marginTop: styleType === 'transparent' && '20px',\n  transition: 'box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n\n  border:\n    styleType === 'transparent'\n      ? '1px solid rgba(74, 86, 226, 1)'\n      : theme.colors.transparent,\n  borderRadius: theme.radii.button,\n  color:\n    styleType === 'transparent'\n      ? theme.colors.textForBtn\n      : theme.colors.textSecondary,\n  backgroundColor:\n    styleType === 'transparent'\n      ? theme.colors.transparent\n      : theme.colors.BgBtnGreen,\n\n  '&:hover, &:focus': {\n    boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n  },\n}));\n","import { theme } from 'Styles/theme';\nimport { WalletBtn } from './WalletButton.styled';\n\nexport default function WalletButton({ text, styleType, ...otherProps }) {\n  return (\n    <>\n      <WalletBtn theme={theme} styleType={styleType} {...otherProps}>\n        {text}\n      </WalletBtn>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\n// export const TransactionsList = styled.ul`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 8px;\n//   list-style: none;\n// `;\n// export const TransactionsItem = styled.li`\n//   /* display: flex;\n//   flex-direction: column;\n//   gap: 8px; */\n//   margin: 0 auto;\n//   width: 280px;\n//   border-radius: 10px;\n\n//   &:first-of-type {\n//     /* width: 120px; */\n//     border-top-left-radius: 30px;\n//     border-bottom-left-radius: 30px;\n//   }\n//   &:last-child {\n//     /* width: 60px; */\n//     border-top-right-radius: 30px;\n//     border-bottom-right-radius: 30px;\n//   }\n// `;\n\nexport const Table = styled.table`\n  table-layout: fixed;\n  width: 704px;\n  border-collapse: collapse;\n  /* border: 3px solid purple; */\n  margin: 0 auto;\n`;\n\nexport const TableHead = styled.tr`\n  background-color: #fff;\n`;\n\nexport const TableRowDesk = styled.tr`\n  border-bottom: 1px solid #dcdcdf;\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nexport const THelement = styled.th`\n  padding: 16px 20px;\n  text-align: left;\n  font-family: ${({ theme }) => theme.fonts.secondary};\n  font-weight: 700;\n  font-size: 18px;\n  color: #000000;\n\n  &:nth-of-type(1) {\n    width: 20%;\n    border-radius: 30px 0 0 30px;\n  }\n  &:nth-of-type(2) {\n    width: 11%;\n    text-align: center;\n  }\n  &:nth-of-type(3) {\n    width: 17%;\n  }\n  &:nth-of-type(4) {\n    width: 25%;\n  }\n  &:nth-of-type(5) {\n    width: 12%;\n    text-align: right;\n  }\n\n  &:nth-of-type(6) {\n    text-align: right;\n    border-radius: 0 30px 30px 0;\n  }\n`;\nexport const TDelement = styled.td`\n  padding: 14px 20px;\n  text-align: left;\n  font-family: ${({ theme }) => theme.fonts.secondary};\n  font-weight: 400;\n  font-size: 16px;\n  color: #000000;\n\n  &:nth-of-type(2) {\n    text-align: center;\n  }\n\n  &:nth-of-type(6) {\n    text-align: right;\n  }\n`;\n\nexport const TDElementSum = styled.td`\n  color: ${props => (props.isIncome ? '#24CCA7' : '#FF6596')};\n  text-align: right;\n  padding: 14px 20px;\n`;\n\nexport const NoTransactions = styled.p`\n  text-align: center;\n`;\n\n//  стилі від Ксенії\nexport const TableWrapMob = styled.div`\n  padding: 0 20px;\n`;\n\nexport const TableWrapDesk = styled.div`\n  padding: 46px 69px;\n`;\n\nexport const TableRow = styled.tr`\n  background-color: #fff;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.308);\n  }\n\n  &:not(:first-child, :last-child) {\n    box-shadow: inset 4px 0px 0px\n      ${({ styleType }) => (styleType ? '#24CCA7' : '#ff6596')};\n  }\n\n  &:first-child {\n    & > td:first-child {\n      border-top-left-radius: 10px;\n      box-shadow: inset 4px 0px 0px\n        ${({ styleType }) => (styleType ? '#24CCA7' : '#ff6596')};\n    }\n    & > td:nth-child(2) {\n      border-top-right-radius: 10px;\n    }\n  }\n\n  &:last-child {\n    & > td:first-child {\n      border-bottom-left-radius: 10px;\n      border-bottom-right-radius: 10px;\n      box-shadow: inset 4px 0px 0px\n        ${({ styleType }) => (styleType ? '#24CCA7' : '#ff6596')};\n    }\n    & > td:nth-child(2) {\n      border-bottom-right-radius: 10px;\n    }\n  }\n`;\n\nexport const TableCategory = styled.td`\n  text-align: left;\n  font-weight: 700;\n  z-index: -1;\n  left: 10px;\n  font-size: 18px;\n  padding: 10px 15px;\n\n  /* scpt */\n`;\n\nexport const TableTransactions = styled.td`\n  padding: 10px 15px;\n  text-align: right;\n  font-weight: 400;\n  font-size: 16px;\n`;\n\nexport const Amount = styled(TableTransactions)`\n  color: ${({ styleAmount }) => (styleAmount ? '#24CCA7' : '#ff6596')};\n`;\n\nexport const ScrollTableBodyMob = styled.div`\n  overflow-x: auto;\n  margin-top: 0px;\n  margin-bottom: 20px;\n\n  ::-webkit-scrollbar {\n    width: 3px;\n  }\n  ::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3);\n  }\n  ::-webkit-scrollbar-thumb {\n    box-shadow: inset 0 0 3px #24cca7;\n  }\n`;\n\nexport const TableWrapper = styled.table`\n  border-collapse: collapse;\n  margin-bottom: 8px;\n  table-layout: fixed;\n  text-align: center;\n  width: 100%;\n`;\nexport const ScrollTableMob = styled.div`\n  box-sizing: inherit;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  Amount,\n  NoTransactions,\n  ScrollTableBodyMob,\n  ScrollTableMob,\n  TDElementSum,\n  TDelement,\n  THelement,\n  Table,\n  TableCategory,\n  TableHead,\n  TableRow,\n  TableRowDesk,\n  TableTransactions,\n  TableWrapMob,\n  TableWrapper,\n  TableWrapDesk,\n} from './HomeTab.styled';\nimport { useMedia } from 'components/Media/useMedia';\nimport { selectTransactions } from 'redux/transactions/transactions-selectors';\nimport { selectTransactionCategories } from 'redux/transactionsCategories/transactionsCategories-selectors';\nimport { fetchTransactionCategories } from 'redux/transactionsCategories/transactionsCategories-operations';\n\nimport { useEffect } from 'react';\nimport { fetchTransactions } from 'redux/transactions/transactions-operations';\n\nexport const HomeTab = () => {\n  const mobile = useMedia().isMobile;\n  const tablet = useMedia().isTablet;\n  const desktop = useMedia().isDesktop;\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n  const transactionsCategories = useSelector(selectTransactionCategories);\n\n  useEffect(() => {\n    dispatch(fetchTransactions());\n    dispatch(fetchTransactionCategories());\n  }, [dispatch]);\n\n  const sortedTransactions = [...transactions].sort(\n    (a, b) => new Date(b.transactionDate) - new Date(a.transactionDate) ?? []\n  );\n\n  const dataCorrection = data => data.replaceAll('-', '.');\n\n  const getCategoryName = id => {\n    return transactionsCategories.find(el => el.id === id).name;\n  };\n\n  return (\n    <>\n      {mobile && (\n        <TableWrapMob>\n          <ScrollTableMob>\n            <ScrollTableBodyMob>\n              {sortedTransactions.length !== 0 &&\n              transactionsCategories.length !== 0 ? (\n                sortedTransactions.map(\n                  ({\n                    id,\n                    transactionDate,\n                    type,\n                    categoryId,\n                    comment,\n                    amount,\n                    balanceAfter,\n                  }) => (\n                    <TableWrapper key={id}>\n                      <tbody>\n                        <TableRow styleType={type.toLowerCase() === 'income'}>\n                          <TableCategory>Date</TableCategory>\n                          <TableTransactions>\n                            {dataCorrection(transactionDate)}\n                          </TableTransactions>\n                        </TableRow>\n                        <TableRow styleType={type.toLowerCase() === 'income'}>\n                          <TableCategory>Type</TableCategory>\n                          <TableTransactions>\n                            {type !== 'EXPENSE' ? '+' : '-'}\n                          </TableTransactions>\n                        </TableRow>\n\n                        <TableRow styleType={type.toLowerCase() === 'income'}>\n                          <TableCategory>Category</TableCategory>\n                          <TableTransactions>\n                            {getCategoryName(categoryId)}\n                          </TableTransactions>\n                        </TableRow>\n                        <TableRow styleType={type.toLowerCase() === 'income'}>\n                          <TableCategory>Comment</TableCategory>\n                          <TableTransactions>{comment}</TableTransactions>\n                        </TableRow>\n                        <TableRow styleType={type.toLowerCase() === 'income'}>\n                          <TableCategory>Sum</TableCategory>\n                          <Amount styleAmount={type.toLowerCase() === 'income'}>\n                            {amount}\n                          </Amount>\n                        </TableRow>\n                        <TableRow styleType={type.toLowerCase() === 'income'}>\n                          <TableCategory>Balance</TableCategory>\n                          <TableTransactions>{balanceAfter}</TableTransactions>\n                        </TableRow>\n                      </tbody>\n                    </TableWrapper>\n                  )\n                )\n              ) : (\n                <p>No transactions</p>\n              )}\n            </ScrollTableBodyMob>\n          </ScrollTableMob>\n        </TableWrapMob>\n      )}\n      {/* tablet */}\n      {tablet && (\n        <>\n          {sortedTransactions.length > 0 &&\n          transactionsCategories.length !== 0 ? (\n            <Table>\n              <thead>\n                <TableHead>\n                  <THelement>Date</THelement>\n                  <THelement>Type</THelement>\n                  <THelement>Category</THelement>\n                  <THelement>Comment</THelement>\n                  <THelement>Sum</THelement>\n                  <THelement>Balance</THelement>\n                </TableHead>\n              </thead>\n              <tbody>\n                {sortedTransactions.map(\n                  ({\n                    id,\n                    transactionDate,\n                    type,\n                    categoryId,\n                    comment,\n                    amount,\n                    balanceAfter,\n                  }) => {\n                    return (\n                      <TableRowDesk key={id}>\n                        <TDelement>{dataCorrection(transactionDate)}</TDelement>\n                        <TDelement>\n                          {type.toLowerCase() === 'income' ? '+' : '-'}\n                        </TDelement>\n                        <TDelement>{getCategoryName(categoryId)}</TDelement>\n                        <TDelement>{comment}</TDelement>\n                        <TDElementSum\n                          isIncome={type.toLowerCase() === 'income'}\n                        >\n                          {amount}\n                        </TDElementSum>\n                        <TDelement>{balanceAfter}</TDelement>\n                      </TableRowDesk>\n                    );\n                  }\n                )}\n              </tbody>\n            </Table>\n          ) : (\n            <NoTransactions>\n              There are no any transactions at the moment\n            </NoTransactions>\n          )}\n        </>\n      )}\n      {/* desktop */}\n      {desktop && (\n        <TableWrapDesk>\n          {sortedTransactions.length > 0 &&\n          transactionsCategories.length !== 0 ? (\n            <Table>\n              <thead>\n                <TableHead>\n                  <THelement>Date</THelement>\n                  <THelement>Type</THelement>\n                  <THelement>Category</THelement>\n                  <THelement>Comment</THelement>\n                  <THelement>Sum</THelement>\n                  <THelement>Balance</THelement>\n                </TableHead>\n              </thead>\n              <tbody>\n                {sortedTransactions.map(\n                  ({\n                    id,\n                    transactionDate,\n                    type,\n                    categoryId,\n                    comment,\n                    amount,\n                    balanceAfter,\n                  }) => {\n                    return (\n                      <TableRowDesk key={id}>\n                        <TDelement>{dataCorrection(transactionDate)}</TDelement>\n                        <TDelement>\n                          {type.toLowerCase() === 'income' ? '+' : '-'}\n                        </TDelement>\n                        <TDelement>{getCategoryName(categoryId)}</TDelement>\n                        <TDelement>{comment}</TDelement>\n                        <TDElementSum\n                          isIncome={type.toLowerCase() === 'income'}\n                        >\n                          {amount}\n                        </TDElementSum>\n                        <TDelement>{balanceAfter}</TDelement>\n                      </TableRowDesk>\n                    );\n                  }\n                )}\n              </tbody>\n            </Table>\n          ) : (\n            <NoTransactions>\n              There are no any transactions at the moment\n            </NoTransactions>\n          )}\n        </TableWrapDesk>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const AddTransactionButton = styled.button(({ theme }) => ({\n  position: 'fixed',\n  bottom: '20px',\n  right: '20px',\n  backgroundColor: theme.colors.BgBtnGreen,\n  zIndex: '100',\n  color: theme.colors.whiteColor,\n  boxShadow: '0px 6px 15px rgba(36, 204, 167, 0.5)',\n  borderRadius: '50px',\n  width: '40px',\n  height: '40px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n}));\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 0V20\",\n    stroke: \"white\",\n    strokeWidth: 2\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 10L20 10\",\n    stroke: \"white\",\n    strokeWidth: 2\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.6194a661e88e1e5113d28da2398b6404.svg\";\nexport { ForwardRef as ReactComponent };","import { theme } from 'Styles/theme';\nimport { AddTransactionButton } from './AddTrnsctnBtn.styled';\nimport { useDispatch } from 'react-redux';\nimport { openModalAddTransaction } from 'redux/global/global-slice';\nimport Plus from 'assets/images/plus.svg';\n\nexport default function AddTrnsctnBtn() {\n  const dispatch = useDispatch();\n\n  const handleClick = event => {\n    event.preventDefault();\n    window.scrollTo(0, 0);\n    dispatch(openModalAddTransaction());\n    document.body.style.overflow = 'hidden';\n  };\n\n  return (\n    <AddTransactionButton theme={theme} onClick={handleClick}>\n      <img src={Plus} alt=\"\" />\n    </AddTransactionButton>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 60px;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.25);\n\n  /* overflow-y: hidden; */\n  z-index: 100;\n\n  @media (min-width: 768px) {\n    min-width: 603px;\n    min-height: 540px;\n    top: 0;\n  }\n`;\n\nexport const ModalWindow = styled.div(({ theme }) => ({\n  width: '100%',\n  height: '100%',\n  padding: '20px 10px',\n  backgroundColor: theme.colors.textSecondary,\n  textAlign: 'center',\n  overflow: 'scroll',\n\n  '@media (min-width: 768px)': {\n    width: '540px',\n    height: 'auto',\n    padding: '40px 0 60px',\n    overflow: 'visible',\n    borderRadius: '20px',\n  },\n}));\n\nexport const ModalTitle = styled.p(({ theme }) => ({\n  marginBottom: '40px',\n  fontFamily: theme.fonts.main,\n  fontSize: '1.5rem',\n  fontWeight: theme.fontWeights.medium,\n}));\n","import styled from '@emotion/styled';\nimport { Switch, Input, Select, Textarea } from '@chakra-ui/react';\n\nexport const ModalCheckbox = styled.div(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  gap: '20px',\n}));\n\nexport const CheckboxText = styled.span(({ theme, isChecked }) => ({\n  fontFamily: theme.fonts.secondary,\n  fontSize: theme.fontSizes.md,\n  fontWeight: theme.fontWeights.bold,\n  color: '#E0E0E0',\n\n  '&:first-of-type': {\n    color: !isChecked && theme.colors.BgBtnGreen,\n  },\n\n  '&:last-of-type': {\n    color: isChecked && theme.colors.BgBtnRed,\n  },\n}));\n\nexport const ModalForm = styled.form(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: '40px',\n  color: theme.colors.placeholder,\n  fontFamily: theme.fonts.secondary,\n  fontSize: theme.fontSizes.lg,\n}));\n\nexport const SelectWrapper = styled.div`\n  position: relative;\n`;\n\nexport const AmountDateWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n\n  @media (min-width: 768px) {\n    width: 394px;\n    flex-direction: row;\n    gap: 30px;\n  }\n`;\n\nexport const ModalSlct = styled(Select)(({ theme }) => ({\n  width: '280px',\n  paddingLeft: '20px',\n  paddingRight: '20px',\n  borderBottom: '1px solid #E0E0E0',\n\n  '& + div': {\n    position: 'absolute',\n    right: '30px',\n\n    '@media (min-width: 768px)': {\n      right: '8px',\n    },\n  },\n\n  '@media (min-width: 768px)': {\n    width: '394px',\n  },\n}));\n\nexport const ModalOpt = styled.option(({ theme }) => ({}));\n\nexport const ModalSwitch = styled(Switch)(({ theme }) => ({}));\n\nexport const ModalInput = styled(Input)(({ theme }) => ({\n  width: '280px',\n  paddingLeft: '20px',\n  paddingRight: '20px',\n  borderBottom: '1px solid #E0E0E0',\n\n  '&:first-of-type': {\n    fontWeight: theme.fontWeights.bold,\n  },\n\n  '@media (min-width: 768px)': {\n    width: 'calc((100% - 30px) / 2)',\n  },\n}));\n\nexport const ModalCmnt = styled(Textarea)(({ theme }) => ({\n  width: '280px',\n  paddingLeft: '20px',\n  paddingRight: '20px',\n  borderBottom: '1px solid #E0E0E0',\n\n  '@media (min-width: 768px)': {\n    width: '394px',\n  },\n}));\n","import {\n  CheckboxText,\n  ModalCheckbox,\n  ModalCmnt,\n  ModalForm,\n  ModalInput,\n  ModalOpt,\n  ModalSlct,\n  ModalSwitch,\n  SelectWrapper,\n  AmountDateWrapper,\n} from './AddTransactionForm.styled';\nimport { theme } from 'Styles/theme';\nimport WalletButton from 'components/WalletButton/WalletButton';\nimport { useFormik } from 'formik';\nimport { SlArrowDown } from 'react-icons/sl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModalWindow } from 'redux/global/global-slice';\nimport { selectBalance } from 'redux/auth/auth-selectors';\nimport { changeBalance } from 'redux/auth/auth-slice';\nimport { addTransaction } from 'redux/transactions/transactions-operations';\nimport { selectTransactionCategories } from 'redux/transactionsCategories/transactionsCategories-selectors';\nimport { fetchTransactionCategories } from 'redux/transactionsCategories/transactionsCategories-operations';\nimport { useEffect } from 'react';\nimport { useMedia } from 'components/Media/useMedia';\n\nexport default function AddTransactionForm() {\n  const media = useMedia();\n  const userBalance = useSelector(selectBalance);\n  const categories = useSelector(selectTransactionCategories);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTransactionCategories());\n  }, [dispatch]);\n\n  const formik = useFormik({\n    initialValues: {\n      isChecked: true,\n      category: '',\n      amount: '',\n      date: '',\n      comment: '',\n    },\n    onSubmit: values => {\n      const { category, amount, date, comment } = values;\n      const selectedCategory = categories.find(item => {\n        return item.name === (category === '' ? 'Income' : category);\n      });\n\n      const balanceAfter =\n        selectedCategory.type === 'INCOME'\n          ? userBalance + amount\n          : userBalance - amount;\n\n      const categoryId = selectedCategory.id;\n\n      const newTransaction = {\n        transactionDate: date,\n        type: selectedCategory.type,\n        comment: comment,\n        amount: selectedCategory.type === 'EXPENSE' ? '-' + amount : amount,\n        categoryId,\n      };\n      dispatch(changeBalance(balanceAfter));\n      dispatch(addTransaction(newTransaction));\n      formik.resetForm();\n      dispatch(closeModalWindow());\n      document.body.style.overflow = 'unset';\n    },\n  });\n\n  return (\n    <>\n      <ModalForm theme={theme} onSubmit={formik.handleSubmit}>\n        <ModalCheckbox>\n          <CheckboxText theme={theme} isChecked={formik.values.isChecked}>\n            Income\n          </CheckboxText>\n          <ModalSwitch\n            variant=\"myStyle\"\n            name=\"isChecked\"\n            onChange={formik.handleChange}\n            isChecked={formik.values.isChecked}\n            size=\"lg\"\n            theme={theme}\n          />\n          <CheckboxText theme={theme} isChecked={formik.values.isChecked}>\n            Expense\n          </CheckboxText>\n        </ModalCheckbox>\n        {formik.values.isChecked && (\n          <SelectWrapper>\n            <ModalSlct\n              name=\"category\"\n              onChange={formik.handleChange}\n              value={formik.values.category}\n              theme={theme}\n              placeholder=\"Select the category\"\n              variant=\"flushed\"\n              required\n              icon={<SlArrowDown fill=\"#000\" />}\n            >\n              {categories.map(category => {\n                if (category.name === 'Income') {\n                  return <></>;\n                }\n                return (\n                  <ModalOpt\n                    key={category.id}\n                    value={category.name}\n                    theme={theme}\n                  >\n                    {category.name}\n                  </ModalOpt>\n                );\n              })}\n            </ModalSlct>\n          </SelectWrapper>\n        )}\n        <AmountDateWrapper>\n          <ModalInput\n            variant=\"flushed\"\n            type=\"number\"\n            name=\"amount\"\n            onChange={formik.handleChange}\n            value={formik.values.amount}\n            placeholder=\"0.00\"\n            required\n          />\n          <ModalInput\n            variant=\"flushed\"\n            type=\"date\"\n            name=\"date\"\n            onChange={formik.handleChange}\n            value={formik.values.date}\n            placeholder=\"Select date\"\n            required\n          />\n        </AmountDateWrapper>\n        <ModalCmnt\n          type=\"text\"\n          name=\"comment\"\n          onChange={formik.handleChange}\n          value={formik.values.comment}\n          placeholder=\"Comment\"\n          variant=\"flushed\"\n          resize=\"none\"\n          rows={media.isMobile ? 3 : 1}\n        />\n        <div>\n          <WalletButton text={'add'} styleType={'normal'} type=\"submit\" />\n          <WalletButton\n            text={'cancel'}\n            styleType={'transparent'}\n            type=\"button\"\n            onClick={event => {\n              event.preventDefault();\n              dispatch(closeModalWindow());\n              document.body.style.overflow = 'unset';\n            }}\n          />\n        </div>\n      </ModalForm>\n    </>\n  );\n}\n","import { ModalTitle, ModalWindow, Overlay } from './AddTransactionModal.styled';\nimport { theme } from 'Styles/theme';\nimport AddTransactionForm from './AddTransactionForm/AddTransactionForm';\nimport { ToastNotification } from 'components/ToastNotification/ToastNotification';\n\nconst { createPortal } = require('react-dom');\nconst modalElement = document.querySelector('#modal-root');\n\nexport default function AddTransactionModal() {\n  return createPortal(\n    <>\n      <ToastNotification />\n      <Overlay>\n        <ModalWindow theme={theme}>\n          <ModalTitle theme={theme}>Add transaction</ModalTitle>\n          <AddTransactionForm />\n        </ModalWindow>\n      </Overlay>\n    </>,\n    modalElement\n  );\n}\n","import { Grid, GridItem } from '@chakra-ui/react';\nimport { useTheme } from '@chakra-ui/react';\nimport { Currency } from 'components/Currency/Currency';\nimport { Balance } from 'components/Balance/Balance';\nimport { useMedia } from 'components/Media/useMedia';\nimport {\n  BalanceBlockDesk,\n  BalanceBlockTablet,\n  BalanceBlockMob,\n} from 'components/Balance/Balance.styled';\n\nimport { BubleWrapper } from 'components/Navigations/Navigation.styled';\nimport {\n  NavigationMobile,\n  NavigationTablet,\n  NavigationDesktop,\n} from 'components/Navigations/Navigation';\n\nimport { HomeTab } from 'components/HomeTab/HomeTab';\nimport AddTrnsctnBtn from 'components/AddTrnsctnBtn/AddTrnsctnBtn';\nimport AddTransactionModal from 'components/AddTransactionModal/AddTransactionModal';\nimport { useSelector } from 'react-redux';\nimport { selectIsModalAddTransactionOpen } from 'redux/global/global-selectors';\nimport authOperations from 'redux/auth/auth-operations';\nimport { useEffect } from 'react';\n\nconst HomePage = () => {\n  const media = useMedia();\n  const theme = useTheme();\n  const { fetchCurrentUser } = authOperations;\n\n  useEffect(() => {\n    fetchCurrentUser();\n  }, [fetchCurrentUser]);\n\n  const isModalAddTransactionOpen = useSelector(\n    selectIsModalAddTransactionOpen\n  );\n\n  return (\n    <>\n      <AddTrnsctnBtn />\n      {isModalAddTransactionOpen && <AddTransactionModal />}\n\n      {media.isMobile && (\n        <Grid\n          templateAreas={`\"nav nav\"\n                  \"main main\"`}\n          gridTemplateRows={' 1fr'}\n          gridTemplateColumns={'1fr'}\n          color=\"textMain\"\n          fontFamily=\"heading\"\n        >\n          <GridItem bg={theme.colors.BgMain} area={'nav'} h=\"148px\">\n            <NavigationMobile />\n            <BalanceBlockMob theme={theme}>\n              <Balance />\n            </BalanceBlockMob>\n          </GridItem>\n          <GridItem\n            bg={theme.colors.BgMain}\n            area={'main'}\n            minHeight=\"800px\"\n            paddingTop=\"32px\"\n          >\n            <HomeTab />\n          </GridItem>\n        </Grid>\n      )}\n      {media.isTablet && (\n        <BubleWrapper h=\"100vh\">\n          <Grid\n            templateAreas={`\"nav nav\"\n                  \"main main\"`}\n            gridTemplateRows={'1fr 30px'}\n            gridTemplateColumns={'1fr'}\n            h=\"200px\"\n            color=\"blackAlpha.700\"\n            fontWeight=\"bold\"\n          >\n            <GridItem area={'nav'} h=\"234px\" display=\"flex\" zIndex=\"1\">\n              <section>\n                <NavigationTablet />\n                <BalanceBlockTablet theme={theme}>\n                  <Balance />\n                </BalanceBlockTablet>\n              </section>\n              <Currency />\n            </GridItem>\n            <GridItem area={'main'} zIndex=\"2\">\n              <HomeTab />\n            </GridItem>\n          </Grid>\n        </BubleWrapper>\n      )}\n      {media.isDesktop && (\n        <BubleWrapper>\n          <Grid\n            templateAreas={`\"nav main\"`}\n            gridTemplateRows={'50px 1fr 30px'}\n            gridTemplateColumns={'37vw 1fr'}\n            h=\"200px\"\n            gap=\"0.5\"\n            color=\"blackAlpha.700\"\n            fontWeight=\"bold\"\n          >\n            <GridItem\n              zIndex=\"2\"\n              area={'nav'}\n              h=\"100vh\"\n              borderRight=\"1px solid #E7E5F2\"\n              boxShadow=\"-1px 0px 0px rgba(0, 0, 0, 0.05), 1px 0px 0px rgba(255, 255, 255, 0.6)\"\n            >\n              <NavigationDesktop />\n              <BalanceBlockDesk theme={theme}>\n                <Balance />\n              </BalanceBlockDesk>\n              <Currency />\n            </GridItem>\n\n            <GridItem zIndex=\"2\" area={'main'} display=\"flex\">\n              <HomeTab />\n            </GridItem>\n          </Grid>\n        </BubleWrapper>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import { Helmet } from 'react-helmet-async';\n\nimport HomePage from 'components/HomePage/HomePage';\n\nexport default function Home() {\n  return (\n    <div>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n      <HomePage />\n    </div>\n  );\n}\n"],"names":["Balance","selectBalance","authSelectors","balance","useSelector","toLocaleString","minimumFractionDigits","maximumFractionDigits","replace","theme","BalanceBlockMob","styled","margin","display","flexDirection","gap","justifyContent","width","fontSize","textTransform","backgroundColor","colors","textSecondary","color","textMain","padding","borderRadius","radii","currency","BalanceBlockTablet","marginLeft","BalanceSumm","fontFamily","fonts","main","lineHeight","fontWeight","BalanceBlockDesk","BalanceTitle","secondary","WalletBtn","styleType","alignItems","minWidth","minHeight","mainForms","fontSizes","lg","letterSpacing","marginTop","transition","border","transparent","button","textForBtn","BgBtnGreen","boxShadow","WalletButton","text","otherProps","Table","TableHead","TableRowDesk","THelement","TDelement","TDElementSum","props","isIncome","NoTransactions","TableWrapMob","TableWrapDesk","TableRow","TableCategory","TableTransactions","Amount","styleAmount","ScrollTableBodyMob","TableWrapper","ScrollTableMob","HomeTab","mobile","useMedia","isMobile","tablet","isTablet","desktop","isDesktop","dispatch","useDispatch","transactions","selectTransactions","transactionsCategories","selectTransactionCategories","useEffect","fetchTransactions","fetchTransactionCategories","sortedTransactions","sort","a","b","Date","transactionDate","dataCorrection","data","replaceAll","getCategoryName","id","find","el","name","length","map","type","categoryId","comment","amount","balanceAfter","toLowerCase","AddTransactionButton","position","bottom","right","zIndex","whiteColor","height","AddTrnsctnBtn","onClick","event","preventDefault","window","scrollTo","openModalAddTransaction","document","body","style","overflow","src","Plus","alt","Overlay","ModalWindow","textAlign","ModalTitle","marginBottom","fontWeights","medium","ModalCheckbox","CheckboxText","isChecked","md","bold","BgBtnRed","ModalForm","placeholder","SelectWrapper","AmountDateWrapper","ModalSlct","Select","paddingLeft","paddingRight","borderBottom","ModalOpt","ModalSwitch","Switch","ModalInput","Input","ModalCmnt","Textarea","AddTransactionForm","media","userBalance","categories","formik","useFormik","initialValues","category","date","onSubmit","values","selectedCategory","item","newTransaction","changeBalance","addTransaction","resetForm","closeModalWindow","handleSubmit","variant","onChange","handleChange","size","value","required","icon","fill","resize","rows","createPortal","require","modalElement","querySelector","AddTransactionModal","ToastNotification","useTheme","fetchCurrentUser","authOperations","isModalAddTransactionOpen","selectIsModalAddTransactionOpen","templateAreas","gridTemplateRows","gridTemplateColumns","bg","BgMain","area","h","Navigation","paddingTop","Currency","borderRight","Home"],"sourceRoot":""}